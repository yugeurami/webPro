-- [X] VIEW, INLINE VIEW, TOP-N
--1. VIEW : 가상의 테이블 
-- (1) 단순 VIEW : 하나의 테이블로 구성한 VIEW
-- EMPv0이라는 VIEW 생성 또는 수정 = EMP 테이블 일부 필드를 갖는 가상의 테이블
SELECT * FROM USER_VIEWS; -- 데이터 딕셔너리 뷰 확인
CREATE OR REPLACE VIEW EMPv0
    AS SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, DEPTNO FROM EMP; -- DDL을 수행하면 데이터딕셔너리 자동 수정
SELECT * FROM EMPv0; -- 가상의 테이블
INSERT INTO EMPv0 VALUES (1111, '홍', 'ITMANAGER', 7369, SYSDATE, 40); -- 뷰에 INSERT하면 EMP 테이블에도 INSERT
SELECT * FROM EMPv0;
SELECT * FROM EMP;
UPDATE EMPv0 SET JOB='MANAGER' WHERE EMPNO=1111; -- 뷰 UPDATE하면 EMP 테이블도 UPDATE
DELETE FROM EMPv0 WHERE EMPNO=1111; -- 뷰 DELETE하면 EMP 테이블도 DELETE

-- EMPv0 이라는 VIEW : EMP테이블의 30번 부서행만
CREATE OR REPLACE VIEW EMPv0
    AS SELECT * FROM EMP WHERE DEPTNO=30;
DESC EMPv0;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES (1111, '홍', NULL, NULL, SYSDATE, 9000, 900, 30); -- 30번 부서 INSERT
SELECT * FROM EMPv0;
SELECT * FROM EMP;
-- 40번 부서 입력은 가능하나 보이지 않음
INSERT INTO EMPv0 VALUES(1112, '박', NULL, NULL, SYSDATE, 8000, 800, 40); 
SELECT * FROM EMPv0;
SELECT * FROM EMP;
DELETE FROM EMPv0 WHERE EMPNO IN (1111, 1112); -- 30번 부서만 삭제됨
DELETE FROM EMP WHERE EMPNO=1112; -- 40번 부서는 EMP에서 삭제

-- EMPv0 뷰 생성 : ENAME, JOB, HIREDATE만으로 뷰 / NOT NULL 필드를 미포함하면 INSERT 불가
CREATE OR REPLACE VIEW EMPv0
    AS SELECT ENAME, JOB, HIREDATE FROM EMP;
INSERT INTO EMPv0 VALUES ('홍', 'SALESMAN', SYSDATE); 
SELECT * FROM EMPv0;
COMMIT;

-- VIEW의 제한 조건 
--뷰의 조건
-- WITH CHECK OPTION을 설정한 뷰는 뷰의 조건에 해당되는 데이터만 삽입, 수정, 삭제 가능
-- EMPv0 : EMP테이블에서 30번 부서만
CREATE OR REPLACE VIEW EMPv0
    AS SELECT * FROM EMP WHERE DEPTNO=30
    WITH CHECK OPTION;
INSERT INTO EMPv0 VALUES (1111, '홍', NULL, NULL, SYSDATE, 9000, 900, 30); -- 30번 부서만 INSERT
INSERT INTO EMPv0 VALUES(1112, '홍', NULL, NULL, SYSDATE, 9000, 900, 40); -- WHERE조건에 만족하지 않으면 불가
DELETE FROM EMPv0 WHERE ENAME = 'SMITH'; -- 20번 부서 SMITH DELETE 안됨
DELETE FROM EMPv0 WHERE EMPNO = 1111; -- 30번 부서 DELETE

--읽기전용
-- WITH READ ONLY을 설정한 뷰는 읽기 전용 뷰
-- EMPv0 : 읽기 전용 뷰
CREATE OR REPLACE VIEW EMPv0
    AS SELECT EMPNO, ENAME, JOB, MGR, DEPTNO FROM EMP
    WITH READ ONLY;
INSERT INTO EMPv0 VALUES (1111, '홍', NULL, NULL, 40); -- 에러 (읽기 전용 뷰)

-- (2) 복합 VIEW
-- 두 개 이상의 테이블로 구성한 뷰이거나 가상의 필드로 뷰를 만들 경우
-- DML문을 제한적으로 사용
-- ① 2개 이상의 테이블로 뷰 생성
CREATE OR REPLACE VIEW EMPv0
    AS SELECT EMPNO, ENAME, JOB, DNAME, LOC FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES (1111, 'HONG', 'MANAGER', 'RESERACH', 'DALLAS'); -- 복합 뷰는 갱신 불가

-- ② 가상의 필드로 뷰 생성 : 컬럼에 별칭(영문자,숫자,_)을 이용하여 뷰 생성
CREATE OR REPLACE VIEW EMPv0
    AS SELECT EMPNO, ENAME, SAL*12 "YEAR_SAL" FROM EMP WHERE DEPTNO=10; -- 기존의 별칠

CREATE OR REPLACE VIEW EMPv0 (EMPNO, ENAME, YEAR_SAL)   -- 별칭들만 따로 나열
    AS SELECT EMPNO, ENAME, SAL*12 FROM EMP WHERE DEPTNO=10;

SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES (1111, 'HONG', 2400); -- 복합뷰는 갱신 불가

-- ex. 부서번호, 최소급여, 최대급여, 부서평균급여를 포함한 DEPTv1 뷰를 생성
CREATE OR REPLACE VIEW DEPTv1
    AS SELECT DEPTNO, MIN(SAL) "MIN", MAX(SAL) "MAX", AVG(SAL) "AVG" FROM EMP GROUP BY DEPTNO;
SELECT*FROM DEPTv1;
-- ex. 직책, 부서를 포함한 EMPv0뷰 생성
CREATE OR REPLACE VIEW EMPv0
    AS SELECT DISTINCT JOB, DEPTNO FROM EMP ORDER BY DEPTNO; -- DISTINCT를 포함한 VIEW도 읽기 전용
SELECT * FROM EMPv0;


-- 2. INLINE VIEW
-- FROM절 상의 서브쿼리를 INLINE VIEW라 하며, FROM절에 오는 서브쿼리는 VIEW처럼 작동
-- ex. 급여가 2000을 초과하는 사원의 평균 급여
SELECT AVG(SAL) FROM EMP WHERE SAL>2000;
SELECT AVG(SAL)
    FROM (SELECT SAL FROM EMP WHERE SAL>2000);
    
-- ex. 부서별로 월급이 평균 월급보다 높은 사원을 사번, 이름, 급여, 부서번호
SELECT EMPNO, ENAME, SAL, E.DEPTNO
    FROM EMP E, (SELECT DEPTNO, AVG(SAL) AVG FROM EMP GROUP BY DEPTNO) A
    WHERE E.DEPTNO=A.DEPTNO AND E.SAL>AVG;
-- ex. 업무별로 평균 월급보다 적은 월급을 받는 사원을 부서번호, 이름, 급여
SELECT DEPTNO, ENAME, SAL
    FROM EMP E, (SELECT JOB, AVG(SAL) AVG FROM EMP GROUP BY JOB) J
    WHERE E.JOB=J.JOB AND E.SAL<AVG;
    
-- 3. TOP-N
-- TOP 1~10등/ TOP 11~20등 / TOP 6~10등
-- ROWNUM : FROM절의 테이블로 부터 가져온 순서
SELECT ROWNUM, ENAME FROM EMP WHERE DEPTNO=20;
SELECT ROWNUM, ENAME FROM EMP WHERE DEPTNO=20 ORDER BY ENAME;
-- 등수, 이름, SAL (전체 행에 대해)
SELECT ROWNUM, ENAME, SAL FROM EMP ORDER BY SAL DESC;
SELECT ROWNUM, ENAME, SAL
    FROM (SELECT * FROM EMP ORDER BY SAL DESC);
-- 함수를 이용한 RANK 출력
SELECT RANK() OVER(ORDER BY SAL DESC) RANK,
    DENSE_RANK() OVER(ORDER BY SAL DESC) DENSE_RANK,
    ROW_NUMBER() OVER(ORDER BY SAL DESC) ROW_NUM,
    ENAME, SAL FROM EMP;

-- SAL 기준으로 1~5등
SELECT ROWNUM, ENAME, SAL
    FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL DESC)
    WHERE ROWNUM <=5;
-- SAL 기준으로 6~10등
SELECT ROWNUM, ENAME, SAL
    FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL DESC)
    WHERE ROWNUM BETWEEN 6 AND 10; -- 결과가 한행도 안나옴
-- TOP-N 구문 1단계
SELECT ROWNUM RN, ENAME, SAL
    FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL DESC);
-- TOP-N 구문 완성
SELECT RN, ENAME, SAL
    FROM (SELECT ROWNUM RN, ENAME, SAL FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL DESC))
    WHERE RN BETWEEN 6 AND 10;

-- 이름을 알파벳 순서대로 정렬해서 6~10번까지 출력 (등수, 이름, 사번, JOB, MGR, HIREDATE)
SELECT RN, ENAME, EMPNO, JOB, MGR, HIREDATE
    FROM (SELECT ROWNUM RN, ENAME, EMPNO, JOB, MGR, HIREDATE FROM (SELECT * FROM EMP ORDER BY ENAME))
    WHERE RN BETWEEN 6 AND 10;
    

--<연습문제>
-- 1. 부서명과 사원명을 출력하는 용도의 뷰, DNAME_ENAME_VU 를 작성하시오
CREATE OR REPLACE VIEW DNAME_ENAME_VU
    AS SELECT DNAME, ENAME FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO
    WITH READ ONLY;

-- 2. 사원명과 직속상관명을 출력하는 용도의 뷰,  WORKER_MANAGER_VU를 작성하시오
CREATE OR REPLACE VIEW WORKER_MANAGER_VU
    AS SELECT W.ENAME "WORKER NAME", M.ENAME "MANAGER NAME" FROM EMP W, EMP M WHERE W.MGR=M.EMPNO
    WITH READ ONLY;

-- 3. 부서별 급여합계 등수를 출력하시오(부서번호, 급여합계, 등수). -- 학생 질문
SELECT DEPTNO, SUM_SAL, ROWNUM
    FROM (SELECT DEPTNO, SUM(SAL) "SUM_SAL" FROM EMP GROUP BY DEPTNO ORDER BY SUM_SAL DESC);
   
-- 3-1. 부서별 급여합계 등수가 2~3등인 부서번호, 급여합계, 등수를 출력하시오.
SELECT DEPTNO, SUM_SAL, RN
    FROM (SELECT DEPTNO, SUM_SAL, ROWNUM RN FROM (SELECT DEPTNO, SUM(SAL) "SUM_SAL" FROM EMP GROUP BY DEPTNO ORDER BY SUM_SAL DESC))
    WHERE RN BETWEEN 2 AND 3;
    
-- 4. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 순으로 정렬하시오
SELECT EMPNO, ENAME, HIREDATE FROM EMP ORDER BY HIREDATE DESC;

-- 5. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 순으로 1등부터 5명을 출력하시오
SELECT EMPNO, ENAME, HIREDATE
    FROM (SELECT ROWNUM RN, EMPNO, ENAME, HIREDATE FROM(SELECT * FROM EMP ORDER BY HIREDATE DESC))
    WHERE RN BETWEEN 1 AND 5;
    
-- 6. 사원 테이블에서 사번, 사원명, 입사일을 최신부터 오래된 순으로 6번째로 늦은 사원부터 10번째 사원까지 출력
SELECT EMPNO, ENAME, HIREDATE
    FROM (SELECT ROWNUM RN, A.* 
                    FROM (SELECT EMPNO, ENAME, HIREDATE FROM EMP  ORDER BY HIREDATE DESC) A )
    WHERE RN BETWEEN 6 AND 10;
