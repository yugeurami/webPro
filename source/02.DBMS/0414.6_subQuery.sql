-- [VI] SUB QUERY : QUERY안에 QUERY가 내포
-- SELECT 필드1, (SELECT 필드 FROM 테이블 WHERE 조건)
--      FROM 테이블 (SELECT 필드 FROM 테이블 WHERE 조건)
--      WHERE 조건 (SELECT 필드 FROM 테이블 WHERE 조건)

-- 1. 서브쿼리 개념(필요성)
-- 급여 제일 많이 받는 사람의 사번, 이름, 직책 급여
SELECT MAX(SAL) FROM EMP; -- 서브쿼리
SELECT EMPNO, ENAME, JOB, SAL 
    FROM EMP 
    WHERE SAL = (SELECT MAX(SAL) FROM EMP); -- 메인쿼리 (서브쿼리는 괄호로 묶여있어야함)
    
-- 2. 서브쿼리의 종류
-- (1) 단일행 서브쿼리(서브쿼리 결과가 단일행) : =, >, >=, <, <=, !=
    -- ex. SCOTT이 근무하는 부서 이름 출력
    SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT'; -- 서브쿼리
    SELECT DNAME FROM DEPT
    WHERE DEPTNO = (SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT'); -- 메인쿼리
    SELECT DNAME 
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND ENAME = 'SCOTT'; -- JOIN 이용
    
--(2) 다중행 서브쿼리(서브쿼리 결과 2행 이상) : IN, ANY, ALL, EXISTS
    -- ex. JOB이 MANAGER인 사람의 부서이름
    SELECT DEPTNO FROM EMP WHERE JOB = 'MANAGER'; --서브쿼리
    SELECT DNAME FROM DEPT
        WHERE DEPTNO IN (SELECT DEPTNO FROM EMP WHERE JOB = 'MANAGER');
        
--3. 단일행 서브쿼리
    -- 아래  문제 전처리
    SELECT E.DEPTNO, LOC FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO AND ENAME = 'SCOTT';
    INSERT INTO DEPT VALUES (50, 'IT', 'DALLAS');
    INSERT INTO EMP (EMPNO, ENAME, DEPTNO) VALUES (9999, '홍길동', 50);
    -- ex. SCOTT과 같은 부서번호인 사람의 이름과 급여
    SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT';
    SELECT ENAME, SAL FROM EMP
        WHERE DEPTNO = ( SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT') AND ENAME != 'SCOTT';
    -- ex. SCOTT과 같은 근무지인 사람의 이름과 급여
    SELECT LOC FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO AND ENAME = 'SCOTT';
    SELECT ENAME, SAL 
        FROM EMP E, DEPT D 
            WHERE E.DEPTNO=D.DEPTNO 
            AND LOC = ( SELECT LOC FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO AND ENAME = 'SCOTT') AND ENAME != 'SCOTT';
    ROLLBACK; -- 데이터 추가 취소(DML - 데이터 추가, 수정, 삭제를 취소)
    SELECT * FROM DEPT;
    
    --ex. 최초 입사일과 최초 입사한 사람의 이름
    SELECT MIN(HIREDATE) FROM EMP;
    SELECT HIREDATE, ENAME FROM EMP WHERE HIREDATE = (SELECT MIN(HIREDATE) FROM EMP);
    --ex. 최근 입사일과 최근 입사한 사람의 이름
    SELECT MAX(HIREDATE) FROM EMP;
    SELECT HIREDATE, ENAME FROM EMP WHERE HIREDATE = (SELECT MAX(HIREDATE) FROM EMP);
    --ex. 최초 입사일과 최초 입사한 사람의 이름, 최근 입사일과 최근 입사한 사람의 이름
    -- SELECT 절의 서브쿼리는 1행 1열만 들어간다
    SELECT (SELECT HIREDATE FROM EMP WHERE HIREDATE = (SELECT MIN(HIREDATE) FROM EMP)),  
                (SELECT ENAME FROM EMP WHERE HIREDATE = (SELECT MIN(HIREDATE) FROM EMP)),
                 (SELECT HIREDATE FROM EMP WHERE HIREDATE = (SELECT MAX(HIREDATE) FROM EMP)),
                    (SELECT ENAME FROM EMP WHERE HIREDATE = (SELECT MAX(HIREDATE) FROM EMP)) FROM DUAL;

    SELECT E1.HIREDATE, E1.ENAME, E2.HIREDATE, E2.ENAME FROM EMP E1, EMP E2
    WHERE E1.HIREDATE = (SELECT MIN(HIREDATE) FROM EMP) AND E2.HIREDATE = (SELECT MAX(HIREDATE) FROM EMP);
    
    -- ex. SCOTT과 같은 부서에 근무하는 사람들의 급여의 합
    SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT'; -- 서브쿼리
    SELECT SUM(SAL) FROM EMP WHERE DEPTNO = ( SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT'); -- 메인쿼리
    -- ex. SCOTT과 동일한 직책을 가진 사원의 모든 필드
    SELECT JOB FROM EMP WHERE ENAME = 'SCOTT'; -- 서브쿼리
    SELECT * FROM EMP WHERE JOB = (SELECT JOB FROM EMP WHERE ENAME = 'SCOTT'); -- 메인쿼리
    -- ex. DALLAS에서 근무하는 사원의 이름, 부서번호
    SELECT DEPTNO FROM DEPT WHERE LOC = 'DALLAS';
    SELECT ENAME, DEPTNO FROM EMP WHERE DEPTNO = (SELECT DEPTNO FROM DEPT WHERE LOC = 'DALLAS');
    
    SELECT ENAME, E.DEPTNO FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO AND LOC = 'DALLAS'; -- SELF JOIN 이용
    
    -- ex 'KING'의 직속상사인 사원의 이름과 급여
    SELECT EMPNO FROM EMP WHERE ENAME = 'KING';
    SELECT ENAME, SAL FROM EMP WHERE MGR = (SELECT EMPNO FROM EMP WHERE ENAME = 'KING');
    
    SELECT E1.ENAME, E1.SAL FROM EMP E1, EMP E2 WHERE E1.MGR=E2.EMPNO AND E2.ENAME = 'KING'; -- SELF JOIN 이용
    
    -- ex1. 평균 급여 이하로 받는 사원의 이름과 급여를 출력
   SELECT ENAME, SAL FROM EMP WHERE SAL <=(SELECT AVG(SAL) FROM EMP);
    
    -- ex2. 평균 급여 이하로 받는 사원의 이름, 급여, 평균급여 출력
    SELECT ENAME, SAL, (SELECT ROUND(AVG(SAL)) FROM EMP) AVG FROM EMP WHERE SAL <=(SELECT AVG(SAL) FROM EMP);
