[﻿JDBC(Java Database Connectivity)﻿]
자바 패키지의 일부로 자바 프로그램이 데이터 베이스와 연결되어 데이터를 주고 받을 수 있게 해 주는 프로그래밍 인터페이스이다


<설치>
1. JDBC 드라이버
오라클 드라이버또는 MySQL 드라이버를 자바가 설치되어 있는
C:\Program Files\Java\jre1.8.0_XXX\lib\ext 폴더
%JAVA_HOME%/JRE/LIB/EXT 폴더)에 다음의 두 파일을 복사한다.
ojdbc6.JAR (C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib)
mysql-connector-java-8.0.28.jar (C:\Program Files (x86)\MySQL\Connector J 8.0)


2. 이클립스에서 설치
Windows 메뉴 – preferences – Java – Installed JREs – edit – Add External JARs을 통해 두개의 jar를 등록 후 finish


<JDBC 프로그래밍 단계와 사용 클래스>
1. JDBC 드라이버 로드
Class.forName()을 이용. 드라이버 클래스 로딩(드라이버 필요)
사용 API : Class.ForName()


2. 데이터베이스 연결
DriverManager.getConnection()을 이용해 Connection 객체를 생성한다
접속 URL, id, passwd등이 필요하다
사용 API : java.sql.Connection


3. Statement 생성
SQL을 이용해 DB를 조회하거나 다룬다
Statement는 SQL 처리 기본 객체
사용 API : java.sql.Statement java.sql.preparedStatement


4. SQL문 전송
SQL 문 Statement 객체의 executeQuery(), executeUpdate() 메소드를 이용한다
데이터베이스로 전달해 처리
사용 API : java.sql.Statement.executeQuery() java.sql.Statement.executeUpdate()


5. 결과 받기
SQL 실행 결과를 반환 받아야 하는 값이 있따면 ResultSet객체로 받음
사용 API : java.sql.ResultSet


6. 결과 받아 원하는 로직 수행
수행한 결과를 읽어 원하는 로직을 수행한다
필요할 때까지 반복한다


7. 연결 해제
사용한 자원을 반납함
사용 API : java.sql.Connection.close()