[Servlet]
1. 특징
(1)동적 웹어플리케이션 컴포넌트
JSP와 동일

(2) .java 확장자
java 언어를 사용해 웹 프로그램을 제작

(3) 클라이언트의 요청에 의해 동작하고 응답은 HTML을 이용한다

(4) java thread를 이용해 동작한다
= 서블릿을 이용하는 이유
웹컴포넌트를 구성하는 다른 언어에 비해 요청이 많이 들어와도 서버에 부하가 적다

(5) MVC 패턴에서 컨트롤러 부분에 이용된다


2. 파일 생성
서블릿은 일반 클래스와 다르게 상속받아야 하는 클래스가 있다
[ javax.servlet.http.HttpServlet ]를 상속 받아야 서블릿 클래스가 된다



3. 요청
요청 방식에 따라 doGet이라 doPost 메소드를 재정의해서 처리한다
service 메소드를 재정의 해서 사용하면 요청 방식에 상관없이 호출된다

(1) Get 방식
a태그를 이용해서 페이지를 요청하거나 form태그에서 get방식으로 요청하는 경우
URL 값으로 정보가 전송되어 보안이 약하다
주소와 매개변수를 붙여서 주소 표시줄에 입력하는 방법
매개변수의 데이터가 255자가 넘어가면 데이터 전송이 안된다

(2) Post 방식
form 태그에서 post 방식으로 요청하는 경우
URL에 표시되지 않으므로 보안성이 우수하다
한글 파라미터 전달 시 utf-8로 인코딩해야한다
데이터 크기에 제한이 없다



4. 컨텍스트 패스(Context Path)
웹 어플리케이션을 구분하기 위한 path
이클립스에서 프로젝트를 생성하면 자동으로 server.xml에 추가된다
디폴트 값은 해당 웹 어플리케이션의 이름이다(변경 가능)
프로젝트를 삭제하고 다시 같은 이름의 프로젝트를 생성하면 같은 컨텍스트 패스가 존재하게 됨으로 실행이 안된다



5. 파라미터
form 태그에서 submit 후 데이터를 서버로 전송하면 서블릿에서 HttpServletRequest 객체를 이용하여 파라미터 값을 얻을 수 있다


request.getParameter("파라미터이름");			해당 이름의 파라미터
request.getParameterValues("파라미터 배열 이름");	해달 이름의 파라미터 배열
request.getParameterNames();			파라미터 이름 배열