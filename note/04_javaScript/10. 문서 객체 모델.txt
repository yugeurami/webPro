[﻿문서 객체 모델]
넓은 의미로 HTML 페이지를 인식하는 방식
좁은 의미로는 document 객체와 관련된 객체의 집합


<용어>
태그를 자바 스크립트에서 이용할 수 있는 객체로 만든 것을 문서 객체라고 하고
HTML 페이지를 트리 모양의 문서 객체 모델로 나타낼 수 있는데 각 요소는 노드라고 한다


정적 문서 객체 생성 : HTML 페이지에 적혀 있는 태그를 읽으며 생성
동적 문서 객체 생성 : HTML 원 페이지에는 없던 문서 객체를 생성



<문서 객체 만들기>
1. 동적 문서 객체 생성
(1) 노드 생성
createElement(tagName)	요소 노드 생성
createTextNode(text)	텍스트 노드 생성


(2) 문서 객체 연결
appendChild(node)	객체에 노드를 연결
<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title></title>
    <script>
        window.onload = function () {
            // 방법 1
            var h1 = document.createElement('h1');
            var textNode = document.createTextNode('추가한 h1 태그 안 text');
            h1.appendChild(textNode);
            document.body.appendChild(h1);

            // 방법 2
            var img = document.createElement('img');
            img.setAttribute('src', 'img/red.jpg');
            document.body.appendChild(img);

            // 방법 3
            document.body.innerHTML += '<h1>방법3으로 추가</h1>';
        };
    </script>
</head>
<body>
    <h1>Text Node</h1>
    <img src="img/orange.jpg" />
</body>
</html>


2. 정적 문서 객체 생성
(1) setAttribute 이용
<script>
        window.onload = function () {
            var img = document.createElement('img');
            img.setAttribute('src', 'img/orange.jpg');
            img.setAttribute('alt', '오렌지');
            img.setAttribute('width', 300);            
            document.body.appendChild(img);
        }
</script>

(2) innerHTML 이용
<script>
        window.onload = function () {
            var output = '';
            output += '<ul>';
            output += '<li> Java</li>';
            output += '<li> JavaScript</li>';
            output += '</ul>';
            //innerHTML 속성에 문자열을 할당
            document.body.innerHTML = output;
            document.body.innerHTML += '<h1>Document Object Model</h1>';
        }
</script>


<문서 객체 가져오기>
이미 문서 내에 존재하는 HTML태그를 자바스크립트로 가져올 수 있다
1. getElementById("id")
태그의 id 속성과 일치하는 문서 객체를 가져온다


2. getElementsByClassName(“class”)
태그의 class 속성과 일치하는 문서 객체를 가져온다


3. getElementsByName("name")
해당하는 태그의 이름과 일치하는 문서 객체를 배열로 가져온다


4. getElementsByTagName(‘tag name’)
해당하는 태그와 일치하는 문서 객체를 배열로 가져온다


5. document.querySelector("선택자")
선택자로 선택되는 문서 객체 중에 가장 처음 선택되는 문서 객체를 가져옴


6. document.querySelectorAll("선택자")
선택자로 선택되는 문서 객체를 배열로 가져옴



<문서 객체 제거>
<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title></title>
    <script>
        function remove() {
            var header = document.getElementById('header');
            document.body.removeChild(header);
        }
    </script>
</head>
<body>
    <button onclick="remove()">header 없애기</button>
    <h1 id="header">HEADER</h1>
</body>
</html>